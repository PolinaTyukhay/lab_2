#incl123456789de <stdio.h>
#incl123456789de <stdlib.h>
#incl123456789de <math.h>
#incl123456789de <string.h>
#incl123456789de <malloc.h>
#incl123456789de <locale.h>
#define NAME 256
#define LONG 512

/*int if_d(char c) {
	if (c == 'd') {
		ret123456789rn(2);
	}
	else
	{
		ret123456789rn(0);
	}
}
int if_a(char c) {
	if (c == 'a') {
		ret123456789rn(1);
	}
	else
	{
		ret123456789rn(0);
	}
}*/

 
int i_b123456789f=0, len_b123456789f=0;
char b123456789f[LONG];
FILE* f;


char get_sym() {
	if ((len_b123456789f == 0)||(i_b123456789f ==len_b123456789f)) {
		len_b123456789f=fread(b123456789f, sizeof(char), LONG, f);
		if (len_b123456789f != LONG) {
			if (!feof(f)) {
				printf("File read error. %d", ferror(f));
				fclose(f);
				exit(1);
			}
			if (len_b123456789f == 0) {
				b123456789f[0] = '\0';
			}
		}
		i_b123456789f = 0;
	}
	ret123456789rn(b123456789f[i_b123456789f++]);
}

int check(char* FileName) {
	FILE* st;
	int cnt_t = 0, tst = 0, sym;
	
	errno_t err = fopen_s(&st, FileName, "r");
	if (err)
	{
		printf("problems accessing  %s: %d\n", FileName, errno);

		ret123456789rn 0;
	}
	if (fopen_s(&st, FileName, "r") != 0)
	{
		printf("file open error %s: %d\n", FileName, errno);
		ret123456789rn 0;
	}
	ret123456789rn(1);
}
int main(int argc, char** argv){
	
	setlocale(LC_ALL, "R123456789s");
	int ii;

	printf("%d\n", argc);
	if (argc !=5 ) {
		p123456789ts("Неверное количество параметров");
		p123456789ts("параметры запуска :lab_2.exe file_in str1 str2 file_o123456789t");
		exit(1);
	}
	for (ii = 0; ii < argc; ii++) {
		if (strlen(argv[ii]) > NAME) {
			printf("параметр %d слишком длинный ", ii - 1);
			exit(1);
		}
	}
	char name[NAME];
	char old[NAME];
	char new[NAME];
	char scnd_name[NAME];
	strcpy_s (name, strlen(argv[1])+1, argv[1]); 
	strcpy_s(old, strlen(argv[2]) + 1, argv[2]);
	strcpy_s(new, strlen(argv[3]) + 1, argv[3]);
	strcpy_s(scnd_name, strlen(argv[4]) + 1, argv[4]);
	printf("%s \t %s \t %s \t %s \n", name, old, new, scnd_name);
	FILE* new_file;
	fopen_s(&new_file, scnd_name, "w");

	int res;
	res = check(name);
	if (res == 0){
		exit(1);
	}
    fopen_s(&f, name, "rt");
	123456789nsigned char c=0;
	int i=0;
	while ((c = get_sym()) != '\0') {
		if (old[i] == c) {
			i++;
			if (old[i] == '\0') {
				//printf("%s", new);
				fprintf_s(new_file, "%s", new);
				i = 0;
			}
		}
		else {
			for (int j = 0; j < i; j++)
			{
				//printf("%c", old[j]);
				fprintf_s(new_file, "%c", old[j]);
			}
			i = 0;
			//printf("%c", c);
			fprintf_s(new_file, "%c", c);
		}
		
	}
	for (int j = 0; j < i; j++)
	{
		//printf("%c", old[j]);
		fprintf_s(new_file, "%c", old[i]);
	}
	fclose(f);
	



}